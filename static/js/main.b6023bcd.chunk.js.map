{"version":3,"sources":["App.js","index.js"],"names":["App","useReducer","state","action","type","time","isworking","Error","dispatch","useEffect","x","setInterval","console","log","clearInterval","className","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"uLAGe,SAASA,IAgBtB,MAA0BC,sBAf1B,SAAiBC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,QACH,MAAO,CAAEC,KAAMH,EAAMG,KAAMC,WAAW,GACxC,IAAK,OACH,MAAO,CAAED,KAAMH,EAAMG,KAAMC,WAAW,GACxC,IAAK,QACH,MAAO,CAAED,KAAM,EAAGC,WAAW,GAC/B,IAAK,OACH,MAAO,CAAED,KAAMH,EAAMG,KAAO,EAAGC,UAAWJ,EAAMI,WAClD,QACE,MAAM,IAAIC,MAEf,GAE6C,CAAEF,KAAM,EAAGC,WAAW,IAApE,mBAAOJ,EAAP,KAAcM,EAAd,KAgBA,OAdAC,qBAAU,WACR,IAAwB,IAApBP,EAAMI,UAAV,CAEA,IAAMI,EAAIC,aAAY,kBAAMH,EAAS,CAAEJ,KAAM,QAAvB,GAAkC,KAExD,OAAO,WACLQ,QAAQC,IAAI,SACZC,cAAcJ,EACf,CAPoC,CAQtC,GAAE,CAACR,EAAMI,YAMR,sBAAKS,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UAA0Bb,EAAMG,KAAhC,QACA,qBAAKU,UAAU,eAAeC,QAAS,kBAAMR,EAAS,CAAEJ,KAAM,SAAvB,EAAvC,mBAGA,qBAAKW,UAAU,cAAcC,QAAS,kBAAMR,EAAS,CAAEJ,KAAM,QAAvB,EAAtC,kBAGA,qBAAKW,UAAU,eAAeC,QAAS,kBAAMR,EAAS,CAAEJ,KAAM,SAAvB,EAAvC,qBAKL,CC5CD,IAAMa,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACrB,EAAD,M","file":"static/js/main.b6023bcd.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useReducer } from \"react\";\n\nexport default function App() {\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"start\":\n        return { time: state.time, isworking: true };\n      case \"stop\":\n        return { time: state.time, isworking: false };\n      case \"reset\":\n        return { time: 0, isworking: false };\n      case \"tick\":\n        return { time: state.time + 1, isworking: state.isworking };\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, { time: 0, isworking: false });\n\n  useEffect(() => {\n    if (state.isworking === false) return;\n\n    const x = setInterval(() => dispatch({ type: \"tick\" }), 1000);\n\n    return () => {\n      console.log(\"hello\");\n      clearInterval(x);\n    };\n  }, [state.isworking]);\n\n  //understand in this way that dispatch function calls reducer behind the door and updates the state\n  // with the new state returned by reducer\n\n  return (\n    <div className=\"App\">\n      <div className=\"counter\">{state.time} s</div>\n      <div className=\"common start\" onClick={() => dispatch({ type: \"start\" })}>\n        Start\n      </div>\n      <div className=\"common stop\" onClick={() => dispatch({ type: \"stop\" })}>\n        Stop\n      </div>\n      <div className=\"common reset\" onClick={() => dispatch({ type: \"reset\" })}>\n        Reset\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}